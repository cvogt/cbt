#!/usr/bin/env bash
#gdate +"%T.%N"
# Launcher bash script that bootstraps CBT from source.
# (Some of the code for reporting missing dependencies and waiting for nailgun to come up is a bit weird.)
# This is inentionally kept as small as posible.
# Welcome improvements to this file:
# - reduce code size through better ideas
# - reduce code size by moving more of this into type-checked Java/Scala code (if possible without performance loss).
# - reduction of dependencies
# - performance improvements

debug=0

nailgun_installed=1
nailgun_server_installed=1
gpg_installed=1
ng_installed=1
nc_installed=1

javac=$(which javac)
java=$(which java)
ng=$(which ng)
ng_server=$(which ng-server)
gpg=$(which gpg)
nc=$(which nc)

JAVA_OPTS="$JAVA_OPTS -Xmx256M -Xms32M -Dscala.usejavacp"
SCALA_OPTS="$SCALA_OPTS -deprecation -feature"

if [ ! -e "$javac" ] || [ ! -e "$java" ]; then echo "Can't find the JDK (java and javac), is the JDK installed?" 2>&1; exit 1; fi
if [ ! -e "$gpg" ]; then echo "Can't locate gpg, you'll need this to sign packages." 2>&1; gpg_installed=0; fi
if [ ! -e "$ng" ]; then echo "Can't locate nailgun, it's not required, but it makes cbt faster!" 2>&1; nailgun_installed=0; fi
if [ ! -e "$ng_server" ]; then echo "Can't locate nailgun-server, it's not required, but it makes cbt faster!" 2>&1; nailgun_server_installed=0; fi
if [ ! -e "$nc" ]; then echo "Can't locate nc, it would make start up slightly faster." 2>&1; nc_installed=0; fi

if [ $debug -eq 1 ]; then
  echo "javac is $javac"
  echo "ng is $ng"
  echo "ng_server is $ng_server"
  echo "gpg is $gpg"
  echo "nc is $nc"
fi

NAILGUN_PORT=4444
NG="$ng --nailgun-port $NAILGUN_PORT"
CWD=$(pwd)

export CBT_HOME="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export SCALA_VERSION="2.11.7"
export NAILGUN=$CBT_HOME/nailgun_launcher/
export STAGE1=$CBT_HOME/stage1/
export TARGET=target/scala-2.11/classes/

INDICATOR=$STAGE1$TARGET/cbt/Stage1.class

mkdir -p {$NAILGUN,$STAGE1}$TARGET

server_up=0
if [ $nc_installed -eq 1 ]; then
	$nc -znw 1 127.0.0.1 $NAILGUN_PORT > /dev/null 2>&1
  server_up=$?
fi

if [ $nailgun_server_installed -eq 1 ] && [ $server_up -eq 0 ]; then
	echo "Trying to start nailgun..." 2>&1
	$ng_server 127.0.0.1:$NAILGUN_PORT >> $NAILGUN/target/nailgun.stdout.log 2>> $NAILGUN/target/nailgun.stderr.log & 
fi

export SCALA_CLASSPATH=$($CBT_HOME/bootstrap_scala/bootstrap_scala $SCALA_VERSION)
if [ ! $? -eq 0 ]; then echo "Problem with bootstrap_scala" 2>&1; exit 1; fi

changed=0
for file in $(ls $NAILGUN/* $STAGE1/*); do  
	if [ $file -nt $INDICATOR ]; then 
    changed=1
  fi
done

compiles1=0
compiles2=0

# recompile CBT itself if needed
if [ ! $changed -eq 0 ]; then
	echo "Recompiling CBT. Detected source changes..." 1>&2
	$javac -Xlint:deprecation -d $NAILGUN$TARGET $(ls $NAILGUN/*.java)
	compiles1=$?
	rm $STAGE1$TARGET/cbt/*.class 2>/dev/null
	$java -Xbootclasspath/a:$SCALA_CLASSPATH $JAVA_OPTS scala.tools.nsc.Main $SCALA_OPTS -cp $NAILGUN$TARGET -d $STAGE1$TARGET $(ls $STAGE1/*.scala)
	compiles2=$?	
  # Why?
  if [ $nailgun_installed -eq 1 ] && [ $nailgun_server_installed -eq 1 ]; then
    echo "Stopping nailgun" 2>&1
	  $NG ng-stop >> $NAILGUN/target/nailgun.stdout.log 2>> $NAILGUN/target/nailgun.stderr.log & 
	  echo "Restarting nailgun" 2>&1
	  $ng_server 127.0.0.1:$NAILGUN_PORT >> $NAILGUN/target/nailgun.stdout.log 2>> $NAILGUN/target/nailgun.stderr.log & 
  fi
fi

build () { 
	CP=$STAGE1$TARGET:$SCALA_CLASSPATH
  if [ $nailgun_installed -eq 0 ] || [ "$1" = "publishSigned" ] || [ "$2" = "publishSigned" ] || [ "$1" = "direct" ] || [ "$2" = "direct" ]; then
    echo "Running via the JVM..."
    $java -cp $NAILGUN$TARGET cbt.NailgunLauncher $mainClass $CP "$CWD" $*
	else
		echo "Running via nailgun..."
    $NG ng-cp $NAILGUN$TARGET >> $NAILGUN/target/nailgun.stdout.log 2>> $NAILGUN/target/nailgun.stderr.log
    $NG cbt.NailgunLauncher cbt.CheckAlive $CP "$CWD" $* >> $NAILGUN/target/nailgun.stdout.log 2>> $NAILGUN/target/nailgun.stderr.log

    if [ ! $? -eq 0 ]; then
      n=0
      until [ $n -gt 5 ]; do
        echo "Trying to start nailgun... $n"
        $NG ng-cp $NAILGUN$TARGET >> $NAILGUN/target/nailgun.stdout.log 2>> $NAILGUN/target/nailgun.stderr.log
        $NG cbt.NailgunLauncher cbt.CheckAlive $CP "$CWD" $* >> $NAILGUN/target/nailgun.stdout.log 2>> $NAILGUN/target/nailgun.stderr.log
        sleep 10
        $nc -znw 1 127.0.0.1 $NAILGUN_PORT > /dev/null 2>&1
        if [ $? -e 0 ]; then break; fi
        n=$[$n+1]
      done
    fi
	fi
} 

if [ $compiles1 -eq 0 ] && [ $compiles2 -eq 0 ]; then
	if [ "$1" = "admin" ]; then
		mainClass=cbt.AdminStage1
	else
		mainClass=cbt.Stage1
	fi
	build $*
	if [ "$1" = "loop" ]; then
		while true; do
			echo "======= Restarting CBT =======" 2>&1
			build $*
		done
	fi
fi
